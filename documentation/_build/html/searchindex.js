Search.setIndex({"docnames": ["index", "library", "main", "main_evaluation", "modules", "parameters", "src", "src.agents", "src.data_handler", "src.environments", "src.explainability", "src.foundation", "src.performance", "tests", "tests.test_agents", "tests.test_data_handler", "tests.test_environments", "tests.test_explainability", "tests.test_foundation"], "filenames": ["index.rst", "library.rst", "main.rst", "main_evaluation.rst", "modules.rst", "parameters.rst", "explainable_RL.rst", "explainable_RL.agents.rst", "explainable_RL.data_handler.rst", "explainable_RL.environments.rst", "explainable_RL.explainability.rst", "explainable_RL.foundation.rst", "explainable_RL.performance.rst", "tests.rst", "tests.test_agents.rst", "tests.test_data_handler.rst", "tests.test_environments.rst", "tests.test_explainability.rst", "tests.test_foundation.rst"], "titles": ["Welcome to Explainable RL\u2019s documentation!", "library module", "main module", "main_evaluation module", "explainable-RL", "parameters module", "explainable_RL package", "explainable_RL.agents package", "explainable_RL.data_handler package", "explainable_RL.environments package", "explainable_RL.explainability package", "explainable_RL.foundation package", "explainable_RL.performance package", "tests package", "tests.test_agents package", "tests.test_data_handler package", "tests.test_environments package", "tests.test_explainability package", "tests.test_foundation package"], "terms": {"main": [0, 4, 12], "modul": [0, 4], "src": [0, 4], "packag": [0, 4], "test": [0, 4, 8, 11, 12], "index": [0, 9], "search": 0, "page": 0, "policy_devi": [], "sourc": [2, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18], "run_al": 2, "hyperparam_dict": [2, 8, 11], "verbos": [2, 7, 9, 11, 12], "true": [2, 8, 9, 10, 11], "show_plot": 2, "subpackag": 4, "agent": [4, 6, 9, 10, 18], "submodul": [4, 6], "double_q_learn": [4, 6], "q_learner": [4, 6], "sarsa": [4, 6, 11], "sarsa_lambda": [4, 6], "td": [4, 6, 14], "content": 4, "data_handl": [4, 6], "environ": [4, 6, 7], "strategic_pricing_predict": [4, 6], "strategic_pricing_suggest": [4, 6], "pdp": [4, 6, 17], "foundat": [4, 6], "engin": [4, 6, 8, 10, 17, 18], "util": [4, 6, 18], "perform": [4, 6, 7], "performance_evalu": [4, 6], "test_ag": [4, 13], "test_double_q_learn": [4, 13], "test_q_learn": [4, 13], "test_sarsa": [4, 13], "test_sarsa_lambda": [4, 13], "test_td": [4, 13], "test_data_handl": [4, 13], "test_environ": [4, 13], "test_strategic_pricing_predict": [4, 13], "test_strategic_pricing_suggest": [4, 13], "test_explain": [4, 13], "test_pdp": [4, 13], "test_shap_valu": [4, 13], "test_found": [4, 13], "test_engin": [4, 13], "test_util": [4, 13], "explain": 6, "class": [7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18], "doubleqlearn": [7, 14], "env": [7, 11, 18], "gamma": [7, 11], "fals": [7, 9, 10, 11, 12], "base": [7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18], "q": [7, 10, 11], "q_num_sampl": [], "_step": 7, "epsilon": [7, 11], "lr": 7, "step": [7, 9, 11, 14, 16], "paramet": [0, 2, 4, 7, 8, 9, 10, 11, 12], "float": [7, 11, 12], "greedi": [7, 11], "polici": [7, 11], "learn": 7, "rate": [7, 11], "return": [7, 8, 9, 10, 11, 12], "boolean": [], "indic": 11, "whether": [7, 9, 10, 11, 12], "episod": [7, 9, 11, 12], "finish": 7, "type": [7, 8, 9, 10, 11, 12, 18], "done": [9, 11], "_update_q_valu": 7, "state": [7, 8, 9, 10, 11, 17], "action": [7, 8, 9, 10, 11, 17], "next_stat": 7, "reward": [7, 8, 9, 11], "kwarg": 7, "updat": [7, 11], "tabl": [7, 11], "list": [7, 8, 9, 10, 11, 12], "current": [7, 9, 11], "int": [7, 9, 10, 11, 12], "select": [7, 8, 11], "next": [7, 9, 11], "explor": [7, 11], "create_t": [7, 14], "initi": [7, 9, 11], "thi": [7, 9, 11], "reset": [7, 9, 11, 16], "creat": [7, 9, 11], "map": 7, "bool": [7, 8, 9, 10, 11, 12], "print": [7, 9, 11, 12], "inform": [7, 9, 11], "state_to_act": 9, "qlearningag": [7, 14], "store": [7, 8, 11, 12], "us": [7, 9, 11, 12], "bellman": [], "equat": [], "q_learn": [], "sarsaag": [7, 14], "sarsalambdaag": 7, "lambda_": 7, "0": [7, 11], "9": 7, "static": [7, 11], "_convert_to_str": 11, "_epsilon_greedy_polici": [7, 11], "none": [7, 8, 9, 11, 14, 15, 16, 17, 18], "1": [7, 11], "get": [7, 8, 10, 11, 12], "state_str": 11, "string": 11, "_init_q_t": 11, "zero": [8, 11], "fit": [7, 11, 14], "n_episod": [], "n_step": [], "lr_decai": [], "05": [], "lr_min": [], "01": [], "epsilon_decai": [], "epsilon_min": [], "dataset": [7, 8, 9, 11, 12], "number": [7, 9, 10, 11, 12], "per": [8, 9, 10, 12], "decai": 11, "minimum": 11, "train": [7, 8, 10, 11, 12], "uncertainty_informed_polici": [7, 11, 14], "use_uncertainti": [7, 11], "q_import": [7, 11], "7": [7, 11], "favour": [7, 11], "more": [7, 11], "dens": [7, 11], "popul": [7, 11], "pair": [7, 9, 10, 11], "uncertainti": [7, 11], "import": [7, 11], "valu": [7, 9, 10, 11, 12], "datahandl": [8, 9, 11, 15], "data_path": 11, "state_label": [], "action_label": [], "reward_label": [], "n_sampl": 11, "object": [7, 8, 9, 10, 11, 12, 16, 17], "data": [2, 7, 8, 9, 10, 11, 12, 18], "handler": [8, 9, 11, 18], "preprocess": 8, "need": 8, "_action_label": [], "_filter_data": 8, "filter": 8, "_fit_standard_scalar": 8, "sklearn": 8, "minmaxscal": 8, "one": 8, "column": [2, 8, 11, 12], "todo": [], "onli": 9, "_inverse_transform_col": 8, "col_nam": 8, "str": [2, 8, 10, 11, 12], "revers": 8, "normalis": 8, "_n_sampl": [], "_normalised_col": [], "_reward_label": [], "_state_label": [], "_transform_col": 8, "get_action_label": [8, 15], "label": [8, 11, 12], "get_act": [8, 15], "split": [8, 11], "taken": 8, "specifi": 8, "pd": [8, 11], "datafram": [8, 9, 11], "get_reward": [8, 15], "get_stat": [8, 15], "load_data": [2, 11], "delimit": [2, 11, 12], "load": [2, 11, 12], "from": [2, 7, 8, 9, 11, 12], "file": [2, 11, 12], "param": 11, "mdp_data": [], "mdp_data_test": [], "minmax_scalar": [], "normalise_dataset": 8, "cols_to_norm": 8, "centr": 8, "mean": [8, 9], "varianc": 8, "name": [8, 10, 12], "prepare_data_for_engin": [8, 15], "col_delimit": [], "cols_to_normalis": 8, "prepar": [8, 10, 12], "preprocess_data": 8, "columns_to_normalis": 8, "train_test_split": 11, "2": [11, 12], "space": [8, 9, 12], "appli": 8, "shuffl": 8, "arg": [], "which": [2, 8, 9, 11, 12], "left": 8, "empti": 8, "all": [8, 11, 12], "extens": [], "aggreg": [], "over": 12, "time": [7, 12], "period": [], "reverse_norm": [8, 15], "strategicpricingpredictionmdp": [9, 16], "dh": [9, 11, 14, 15, 16, 17, 18], "bin": [9, 10, 11, 12], "mdp": [7, 9, 11], "defin": [7, 11], "instanti": [], "strateg": [9, 11], "price": [9, 11], "_action_mdp_data": [], "_average_reward": [], "_bin_stat": [], "idx": 9, "singular": 9, "The": [7, 8, 9, 11], "ar": [9, 12], "accord": 9, "each": [7, 9, 10], "featur": [9, 10, 11], "dimens": [9, 10, 12], "argument": [7, 9], "can": [7, 9], "contain": [9, 10, 11], "certain": 9, "e": [9, 11, 12], "g": [9, 11, 12], "_bin_state_action_spac": 9, "zip": 9, "group": 9, "datapoint": [9, 12], "np": [9, 10], "arrai": [9, 10], "_create_average_reward_matrix": 9, "bins_dict": 9, "spars": 9, "matrix": [9, 11], "associ": 9, "input": [9, 12], "dictionari": [7, 8, 9, 10, 11, 12], "count": [7, 9], "sum": [7, 9], "dict": [7, 8, 9, 10, 11, 12], "averag": [9, 10], "coo": 9, "_debin_st": 9, "b_state": 9, "debin": 9, "middl": [], "point": [], "de": [9, 11], "_get_counts_and_rewards_per_bin": 9, "_get_state_to_act": 9, "_join_state_act": 9, "join": 9, "togeth": 9, "rtype": [], "_make_rewards_from_data": 9, "_reward_mdp_data": [], "_state_mdp_data": [], "_transform_df_to_numpi": 9, "transform": [9, 11], "numpi": 9, "action_dim": [], "bin_stat": [9, 16], "debin_st": [9, 16], "initialise_env": [9, 11], "given": [8, 9, 10, 11], "ix": [], "num_bin": 12, "randomis": [9, 11], "state_dim": [], "take": [7, 9, 11], "flag": [9, 11], "termin": [9, 11], "tupl": [9, 11], "strategicpricingsuggestionmdp": [9, 16], "_find_next_st": 9, "lookup": 9, "exist": 9, "visit": [7, 9, 10], "_q_arrai": [], "_bin": [], "_bins_per_dim": [], "_denorm_act": [], "_denorm_st": [], "_dig_state_act": [], "_dig_state_actions_sampl": [], "_dig_state_actions_std": [], "_get_denorm_act": 10, "denorm": [10, 17], "_get_denorm_st": 10, "_get_digitized_pdp": 10, "comput": 10, "margin": 10, "effect": 10, "other": 10, "dok": [], "build": 10, "plot": [10, 12], "sampl": [10, 11, 12], "_minmax_scalar": [], "build_data_for_plot": 10, "plot_pdp": 10, "states_nam": [], "fig_nam": 10, "type_featur": [], "savefig": 10, "all_stat": [], "One": 10, "figur": [], "save": [10, 11, 12], "variabl": [], "choos": [], "how": [7, 12], "unvisit": [], "super": 11, "particular": 11, "learner": [7, 11], "predict_act": [10, 11, 17], "predict": [9, 10, 11], "epislon": [], "default": [7, 11], "pure": [7, 11], "exploit": [7, 11], "recommend": 11, "predict_reward": 11, "function": [11, 12, 18], "avg": 11, "simul": 11, "real": 11, "life": 11, "scenario": 11, "agent_typ": [], "env_typ": [], "num_episod": 12, "num_step": [], "_eval_action_dim": [], "_eval_act": [], "_eval_b_st": [], "_eval_reward": [], "_eval_state_dim": [], "_eval_st": [], "_evaluate_total_agent_reward": 11, "calcul": 11, "total": [7, 11], "obtain": 11, "evalu": [11, 12], "s": 11, "scale": 11, "cumul": 11, "cumreward": [], "_evaluate_total_hist_reward": 11, "histor": [7, 11], "_inverse_scale_featur": [], "normal": [10, 11], "agent_cumreward": [], "build_evalu": 11, "create_ag": [11, 18], "an": [7, 10, 11, 12], "create_env": [11, 18], "create_world": [11, 18], "instanc": [9, 11], "task": [9, 11], "episode_flag": [], "evaluate_ag": [], "correspond": [], "rewards_hist": [], "actions_ag": [], "rewards_ag": [], "get_result": [], "result": 12, "sprint": [], "compar": [], "could": [], "after": 18, "converg": [], "hist_cumreward": [], "q_tabl": [], "save_paramet": [], "dure": [], "ani": 15, "Not": [], "sure": [], "call": 7, "directli": [], "alreadi": [], "remov": [], "train_ag": [11, 18], "n_eval_step": [], "10": 12, "chosen": [11, 12], "should": [7, 9, 11], "inherit": 11, "A": 11, "convert_to_list": [11, 18], "convert": 11, "convert_to_str": [11, 14, 18], "decay_param": [11, 18], "min_param": 11, "performanceevalu": 12, "do_pre_benchmark_run_configur": [], "benchmark": 12, "run": [11, 12], "get_all_performance_evalu": 12, "desir": 12, "get_benchmark_perform": 12, "constant": 12, "set": [7, 9, 12, 14, 15, 16, 18], "note": [9, 12], "reason": 12, "timeit": 12, "becaus": 12, "piec": 12, "code": 12, "being": 12, "profil": 12, "lengthi": 12, "whole": 12, "flow": [9, 11, 12], "design": 12, "small": 12, "snippet": 12, "them": 12, "mani": [7, 12], "get_hyperparam_dict_ds_data": [], "num_sampl": 12, "hyperparamet": [7, 8, 11, 12], "datasparq": 12, "loop": [11, 12], "digitis": 12, "equal": 12, "specif": 12, "get_performance_graph": 12, "against": 12, "vari": 12, "held": 12, "get_post_benchmark_run_result": [], "get_space_breakdown_per_funct": 12, "breakdown": 12, "complex": 12, "get_time_breakdown_per_funct": 12, "see": 12, "http": 12, "www": 12, "machinelearningplu": 12, "com": 12, "python": 12, "cprofil": 12, "your": 12, "And": 12, "stackoverflow": 12, "question": 12, "51536411": 12, "readabl": 12, "extern": 12, "get_times_and_memory_from_parameter_rang": [], "parameter_nam": 12, "x": 12, "memori": 12, "record": 12, "rang": 12, "differ": [12, 18], "plot_performance_graph": [], "x_label": 12, "graph": 12, "horizont": 12, "axi": 12, "across": 12, "have": 12, "been": [7, 10, 12], "run_training_loop": [], "exampl": 12, "py": 12, "eventu": 12, "mai": 12, "user": 12, "face": 12, "testdoubleqlearn": 14, "methodnam": [14, 15, 16, 17, 18], "runtest": [14, 15, 16, 17, 18], "testtd": 14, "setup": [14, 15, 16, 17, 18], "hook": [], "method": [14, 15, 16, 17, 18], "up": [14, 15, 16, 18], "fixtur": 15, "befor": [], "exercis": [], "test_fit": 14, "implement": 14, "subclass": 14, "test_step": [14, 16], "test_update_q_valu": 14, "testqlearningag": 14, "testsarsa": 14, "testsarsalambda": 14, "testcas": [14, 15, 16, 17, 18], "classmethod": [14, 16, 17, 18], "setupclass": [14, 16, 17, 18], "teardown": [14, 15, 16, 18], "deconstruct": [], "test_convert_to_str": [14, 18], "test_create_t": 14, "test_epsilon_greedy_polici": 14, "test_init_q_t": 14, "test_uncertainty_informed_polici": 14, "testdatahandl": 15, "test_filter_data": 15, "test_fit_standard_scalar": 15, "test_inverse_transform_col": 15, "test_len_get_action_label": 15, "test_len_get_act": 15, "test_len_get_reward": 15, "test_len_get_st": 15, "test_load_data": [], "test_prepare_data_for_engin": 15, "test_reverse_norm": 15, "test_transform_col": 15, "test_type_get_action_label": 15, "test_type_get_act": 15, "test_type_get_reward": 15, "test_type_get_st": 15, "teststrategicpricingpredictionmdp": 16, "test_bin_st": 16, "test_bin_state_action_spac": 16, "test_create_average_reward_matrix": 16, "test_debin_st": 16, "test_get_counts_and_rewards_per_bin": 16, "test_join_state_act": 16, "test_make_rewards_from_data": 16, "test_reset": 16, "test_transform_df_to_numpi": 16, "test_typ": [], "teststrategicpricingsuggestionmdp": 16, "testpdp": 17, "test_build_data_for_plot": [], "test_create_pdp": 17, "creation": 17, "test_get_denorm_act": 17, "test_get_denorm_st": 17, "test_get_digitized_pdp": 17, "digit": 17, "test_pdp_plot": [], "testshapvalu": 17, "shapvalu": [10, 17], "shap_valu": [4, 6, 17], "test_bin_sampl": 17, "bin_sampl": [10, 17], "test_create_shap_valu": 17, "get_denorm_act": [10, 17], "test_normalize_sampl": 17, "normalize_sampl": [10, 17], "test_predict_act": 17, "test_sample_plus_minus_sampl": 17, "sample_plus_minus_sampl": [10, 17], "test_verify_cell_avail": 17, "verify_cell_avail": [10, 17], "test_verify_outli": 17, "verify_outli": [10, 17], "test_verify_sample_length": 17, "verify_sample_length": [10, 17], "testengin": 18, "test_build_evalu": [], "test_create_ag": 18, "test_create_env": 18, "test_create_world_ag": 18, "test_evaluate_ag": [], "test_evaluate_total_agent_reward": [], "test_evaluate_total_hist_reward": [], "test_get_result": [], "test_inverse_scale_featur": [], "test_save_paramet": [], "test_train_ag": 18, "testutil": 18, "test_convert_to_list": 18, "test_decay_param": 18, "doubl": 7, "q_a": [], "q_b": [], "check": [], "actual": [], "what": [], "you": [], "re": [], "meant": [], "do": [], "two": [], "receiv": [], "keyword": 7, "statement": [7, 9, 11, 12], "lambda": 7, "fraction": [], "ha": [7, 9, 10], "binned_st": [], "respons": 11, "update_q_valu": 14, "sarsalambda": 14, "tear": [14, 15, 16, 18], "down": [14, 15, 16, 18], "epsilon_greedy_polici": 14, "init_q_t": 14, "filter_data": 15, "fit_standard_scalar": 15, "inverse_transform_col": 15, "transform_col": 15, "bin_state_action_spac": 16, "create_average_reward_matrix": 16, "get_counts_and_rewards_per_bin": 16, "join_state_act": 16, "make_rewards_from_data": 16, "transform_df_to_numpi": 16, "rhe": [], "chang": [], "add": [], "separ": [2, 11, 12], "strategicpr": [9, 16], "If": 8, "last": 9, "element": 9, "alwai": 9, "problem": 9, "requir": 9, "singl": 9, "suggest": 9, "partial": 10, "depend": 10, "tool": [], "parent": 11, "child": 11, "invers": 11, "coeffici": 11, "teststrategicpr": 16, "test_find_next_st": 16, "find_next_st": 16, "strategic_pr": [4, 6], "__init__": [7, 8, 9, 10, 11, 12], "initialis": [7, 8, 9, 10, 11, 12], "discount": [7, 11], "factor": [7, 11], "path": [2, 11, 12], "extract": [], "discret": [], "_get_bin": 11, "_get_label": 8, "label_dict": 8, "agent_hyperparam": [7, 11], "training_hyperparam": [7, 11], "pbar": [7, 11], "tqdm": [7, 11], "progress": [7, 11, 12], "bar": [7, 11], "test_dataset": [8, 11], "about": [9, 11], "program": [9, 11], "displai": [9, 11], "inverse_scale_featur": 11, "load_engin": 11, "path_nam": 11, "save_engin": 11, "split_train_test": [11, 18], "proport": [7, 11], "train_dataset": 11, "results_path": 12, "num_sample_rang": 12, "100": 12, "1000": 12, "10000": 12, "100000": 12, "num_ep_rang": 12, "num_bin_rang": 12, "5": 12, "20": 12, "30": 12, "40": 12, "50": 12, "_do_pre_benchmark_run_configur": 12, "_get_hyperparam_dict_ds_data": 12, "_get_post_benchmark_run_result": 12, "_get_times_and_memory_from_parameter_rang": 12, "_load_data": 12, "_plot_performance_graph": 12, "_run_training_loop": 12, "librari": [0, 4], "main_evalu": [0, 4], "new_env": [], "test_strategic_pr": [4, 13], "test_hyperparam": 4, "newenviron": [], "param1": [], "new": [], "made": [], "y": [], "z": [], "docstr": [], "doe": [], "shap": 10, "binned_sampl": 10, "compute_shap_valu": 10, "predicted_act": 10, "denorm_act": 10, "normalized_sampl": 10, "shap_ft": 10, "num_bins_per_shap_ft": 10, "plu": 10, "minu": 10, "s_minu": 10, "s_plu": 10, "verifi": 10, "cell": 10, "otherwis": 10, "outlier": 10, "length": 10, "correct": 10, "total_agent_reward": 11, "total_hist_reward": 11, "test_get_state_to_act": 16, "test_get_bin": 18, "get_bin": 18, "test_load_dataset": 18, "load_dataset": 18, "test_split_train_test": 18, "_get_action_scor": 7, "possible_act": 7, "q_values_weight": 7, "uncertainty_weight": 7, "score": 7, "possibl": 7, "weight": 7, "vs": 7, "amount": 7, "seen": 7, "action_scor": 7, "_get_possible_act": 7, "_get_q_value_weight": 7, "sum_possible_q": 7, "percentag": 7, "appear": 7, "state_action_count": 7, "_get_uncertainty_weight": 7}, "objects": {"": [[1, 0, 0, "-", "library"], [2, 0, 0, "-", "main"], [3, 0, 0, "-", "main_evaluation"], [5, 0, 0, "-", "parameters"], [6, 0, 0, "-", "src"], [13, 0, 0, "-", "tests"]], "main": [[2, 1, 1, "", "load_data"], [2, 1, 1, "", "run_all"]], "src": [[7, 0, 0, "-", "agents"], [8, 0, 0, "-", "data_handler"], [9, 0, 0, "-", "environments"], [10, 0, 0, "-", "explainability"], [11, 0, 0, "-", "foundation"], [12, 0, 0, "-", "performance"]], "src.agents": [[7, 0, 0, "-", "double_q_learner"], [7, 0, 0, "-", "q_learner"], [7, 0, 0, "-", "sarsa"], [7, 0, 0, "-", "sarsa_lambda"], [7, 0, 0, "-", "td"]], "src.agents.double_q_learner": [[7, 2, 1, "", "DoubleQLearner"]], "src.agents.double_q_learner.DoubleQLearner": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_step"], [7, 3, 1, "", "_update_q_values"], [7, 3, 1, "", "create_tables"]], "src.agents.q_learner": [[7, 2, 1, "", "QLearningAgent"]], "src.agents.q_learner.QLearningAgent": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_update_q_values"]], "src.agents.sarsa": [[7, 2, 1, "", "SarsaAgent"]], "src.agents.sarsa.SarsaAgent": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_update_q_values"]], "src.agents.sarsa_lambda": [[7, 2, 1, "", "SarsaLambdaAgent"]], "src.agents.sarsa_lambda.SarsaLambdaAgent": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_update_q_values"]], "src.agents.td": [[7, 2, 1, "", "TD"]], "src.agents.td.TD": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "_epsilon_greedy_policy"], [7, 3, 1, "", "_get_action_scores"], [7, 3, 1, "", "_get_possible_actions"], [7, 3, 1, "", "_get_q_value_weights"], [7, 3, 1, "", "_get_uncertainty_weights"], [7, 3, 1, "", "_step"], [7, 3, 1, "", "_update_q_values"], [7, 3, 1, "", "create_tables"], [7, 3, 1, "", "fit"], [7, 3, 1, "", "uncertainty_informed_policy"]], "src.data_handler": [[8, 0, 0, "-", "data_handler"]], "src.data_handler.data_handler": [[8, 2, 1, "", "DataHandler"]], "src.data_handler.data_handler.DataHandler": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "_filter_data"], [8, 3, 1, "", "_fit_standard_scalars"], [8, 3, 1, "", "_get_labels"], [8, 3, 1, "", "_inverse_transform_col"], [8, 3, 1, "", "_transform_col"], [8, 3, 1, "", "get_action_labels"], [8, 3, 1, "", "get_actions"], [8, 3, 1, "", "get_rewards"], [8, 3, 1, "", "get_states"], [8, 3, 1, "", "normalise_dataset"], [8, 3, 1, "", "prepare_data_for_engine"], [8, 3, 1, "", "preprocess_data"], [8, 3, 1, "", "reverse_norm"]], "src.environments": [[9, 0, 0, "-", "strategic_pricing"], [9, 0, 0, "-", "strategic_pricing_prediction"], [9, 0, 0, "-", "strategic_pricing_suggestion"]], "src.environments.strategic_pricing": [[9, 2, 1, "", "StrategicPricing"]], "src.environments.strategic_pricing.StrategicPricing": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_bin_state_action_space"], [9, 3, 1, "", "_create_average_reward_matrix"], [9, 3, 1, "", "_debin_state"], [9, 3, 1, "", "_get_counts_and_rewards_per_bin"], [9, 3, 1, "", "_get_state_to_action"], [9, 3, 1, "", "_join_state_action"], [9, 3, 1, "", "_make_rewards_from_data"], [9, 3, 1, "", "_transform_df_to_numpy"], [9, 3, 1, "", "bin_state"], [9, 3, 1, "", "bin_states"], [9, 3, 1, "", "debin_states"], [9, 3, 1, "", "initialise_env"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "step"]], "src.environments.strategic_pricing_prediction": [[9, 2, 1, "", "StrategicPricingPredictionMDP"]], "src.environments.strategic_pricing_prediction.StrategicPricingPredictionMDP": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_create_average_reward_matrix"], [9, 3, 1, "", "_get_counts_and_rewards_per_bin"], [9, 3, 1, "", "_make_rewards_from_data"], [9, 3, 1, "", "_transform_df_to_numpy"], [9, 3, 1, "", "step"]], "src.environments.strategic_pricing_suggestion": [[9, 2, 1, "", "StrategicPricingSuggestionMDP"]], "src.environments.strategic_pricing_suggestion.StrategicPricingSuggestionMDP": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "_create_average_reward_matrix"], [9, 3, 1, "", "_find_next_state"], [9, 3, 1, "", "_get_counts_and_rewards_per_bin"], [9, 3, 1, "", "_make_rewards_from_data"], [9, 3, 1, "", "_transform_df_to_numpy"], [9, 3, 1, "", "step"]], "src.explainability": [[10, 0, 0, "-", "pdp"], [10, 0, 0, "-", "shap_values"]], "src.explainability.pdp": [[10, 2, 1, "", "PDP"]], "src.explainability.pdp.PDP": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "_get_denorm_actions"], [10, 3, 1, "", "_get_denorm_states"], [10, 3, 1, "", "_get_digitized_pdp"], [10, 3, 1, "", "build_data_for_plots"], [10, 3, 1, "", "plot_pdp"]], "src.explainability.shap_values": [[10, 2, 1, "", "ShapValues"]], "src.explainability.shap_values.ShapValues": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "bin_sample"], [10, 3, 1, "", "compute_shap_values"], [10, 3, 1, "", "get_denorm_actions"], [10, 3, 1, "", "normalize_sample"], [10, 3, 1, "", "predict_action"], [10, 3, 1, "", "sample_plus_minus_samples"], [10, 3, 1, "", "verify_cell_availability"], [10, 3, 1, "", "verify_outliers"], [10, 3, 1, "", "verify_sample_length"]], "src.foundation": [[11, 0, 0, "-", "agent"], [11, 0, 0, "-", "engine"], [11, 0, 0, "-", "environment"], [11, 0, 0, "-", "utils"]], "src.foundation.agent": [[11, 2, 1, "", "Agent"]], "src.foundation.agent.Agent": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "_convert_to_string"], [11, 3, 1, "", "_epsilon_greedy_policy"], [11, 3, 1, "", "_init_q_table"], [11, 3, 1, "", "fit"], [11, 3, 1, "", "predict_actions"], [11, 3, 1, "", "predict_rewards"], [11, 3, 1, "", "uncertainty_informed_policy"]], "src.foundation.engine": [[11, 2, 1, "", "Engine"]], "src.foundation.engine.Engine": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "_evaluate_total_agent_reward"], [11, 3, 1, "", "_evaluate_total_hist_reward"], [11, 3, 1, "", "_get_bins"], [11, 3, 1, "", "build_evaluation"], [11, 3, 1, "", "create_agent"], [11, 3, 1, "", "create_env"], [11, 3, 1, "", "create_world"], [11, 3, 1, "", "inverse_scale_feature"], [11, 3, 1, "", "train_agent"]], "src.foundation.environment": [[11, 2, 1, "", "MDP"]], "src.foundation.environment.MDP": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "initialise_env"], [11, 3, 1, "", "reset"], [11, 3, 1, "", "step"]], "src.foundation.utils": [[11, 1, 1, "", "convert_to_list"], [11, 1, 1, "", "convert_to_string"], [11, 1, 1, "", "decay_param"], [11, 1, 1, "", "load_data"], [11, 1, 1, "", "load_engine"], [11, 1, 1, "", "save_engine"], [11, 1, 1, "", "split_train_test"]], "src.performance": [[12, 0, 0, "-", "performance_evaluator"]], "src.performance.performance_evaluator": [[12, 2, 1, "", "PerformanceEvaluator"]], "src.performance.performance_evaluator.PerformanceEvaluator": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "_do_pre_benchmark_run_configuration"], [12, 3, 1, "", "_get_hyperparam_dict_ds_data"], [12, 3, 1, "", "_get_post_benchmark_run_results"], [12, 3, 1, "", "_get_times_and_memory_from_parameter_range"], [12, 3, 1, "", "_load_data"], [12, 3, 1, "", "_plot_performance_graph"], [12, 3, 1, "", "_run_training_loop"], [12, 3, 1, "", "get_all_performance_evaluations"], [12, 3, 1, "", "get_benchmark_performance"], [12, 3, 1, "", "get_performance_graphs"], [12, 3, 1, "", "get_space_breakdown_per_function"], [12, 3, 1, "", "get_time_breakdown_per_function"]], "tests": [[14, 0, 0, "-", "test_agents"], [15, 0, 0, "-", "test_data_handler"], [16, 0, 0, "-", "test_environments"], [17, 0, 0, "-", "test_explainability"], [18, 0, 0, "-", "test_foundation"], [13, 0, 0, "-", "test_hyperparams"]], "tests.test_agents": [[14, 0, 0, "-", "test_double_q_learner"], [14, 0, 0, "-", "test_q_learner"], [14, 0, 0, "-", "test_sarsa"], [14, 0, 0, "-", "test_sarsa_lambda"], [14, 0, 0, "-", "test_td"]], "tests.test_agents.test_double_q_learner": [[14, 2, 1, "", "TestDoubleQLearner"]], "tests.test_agents.test_double_q_learner.TestDoubleQLearner": [[14, 3, 1, "", "setUp"], [14, 3, 1, "", "test_fit"], [14, 3, 1, "", "test_step"], [14, 3, 1, "", "test_update_q_values"]], "tests.test_agents.test_q_learner": [[14, 2, 1, "", "TestQLearningAgent"]], "tests.test_agents.test_q_learner.TestQLearningAgent": [[14, 3, 1, "", "setUp"], [14, 3, 1, "", "test_fit"], [14, 3, 1, "", "test_step"], [14, 3, 1, "", "test_update_q_values"]], "tests.test_agents.test_sarsa": [[14, 2, 1, "", "TestSarsa"]], "tests.test_agents.test_sarsa.TestSarsa": [[14, 3, 1, "", "setUp"], [14, 3, 1, "", "test_fit"], [14, 3, 1, "", "test_step"], [14, 3, 1, "", "test_update_q_values"]], "tests.test_agents.test_sarsa_lambda": [[14, 2, 1, "", "TestSarsaLambda"]], "tests.test_agents.test_sarsa_lambda.TestSarsaLambda": [[14, 3, 1, "", "setUp"], [14, 3, 1, "", "test_update_q_values"]], "tests.test_agents.test_td": [[14, 2, 1, "", "TestTD"]], "tests.test_agents.test_td.TestTD": [[14, 4, 1, "", "dh"], [14, 3, 1, "", "setUp"], [14, 3, 1, "", "setUpClass"], [14, 3, 1, "", "tearDown"], [14, 3, 1, "", "test_convert_to_string"], [14, 3, 1, "", "test_create_tables"], [14, 3, 1, "", "test_epsilon_greedy_policy"], [14, 3, 1, "", "test_fit"], [14, 3, 1, "", "test_init_q_table"], [14, 3, 1, "", "test_step"], [14, 3, 1, "", "test_uncertainty_informed_policy"], [14, 3, 1, "", "test_update_q_values"]], "tests.test_data_handler": [[15, 0, 0, "-", "test_data_handler"]], "tests.test_data_handler.test_data_handler": [[15, 2, 1, "", "TestDataHandler"]], "tests.test_data_handler.test_data_handler.TestDataHandler": [[15, 4, 1, "", "dh"], [15, 3, 1, "", "setUp"], [15, 3, 1, "", "tearDown"], [15, 3, 1, "", "test_filter_data"], [15, 3, 1, "", "test_fit_standard_scalars"], [15, 3, 1, "", "test_inverse_transform_col"], [15, 3, 1, "", "test_len_get_action_labels"], [15, 3, 1, "", "test_len_get_actions"], [15, 3, 1, "", "test_len_get_rewards"], [15, 3, 1, "", "test_len_get_states"], [15, 3, 1, "", "test_prepare_data_for_engine"], [15, 3, 1, "", "test_reverse_norm"], [15, 3, 1, "", "test_transform_col"], [15, 3, 1, "", "test_type_get_action_labels"], [15, 3, 1, "", "test_type_get_actions"], [15, 3, 1, "", "test_type_get_rewards"], [15, 3, 1, "", "test_type_get_states"]], "tests.test_environments": [[16, 0, 0, "-", "test_strategic_pricing"], [16, 0, 0, "-", "test_strategic_pricing_prediction"], [16, 0, 0, "-", "test_strategic_pricing_suggestion"]], "tests.test_environments.test_strategic_pricing": [[16, 2, 1, "", "TestStrategicPricing"]], "tests.test_environments.test_strategic_pricing.TestStrategicPricing": [[16, 4, 1, "", "dh"], [16, 3, 1, "", "setUp"], [16, 3, 1, "", "setUpClass"], [16, 3, 1, "", "tearDown"], [16, 3, 1, "", "test_bin_state"], [16, 3, 1, "", "test_bin_state_action_space"], [16, 3, 1, "", "test_bin_states"], [16, 3, 1, "", "test_debin_state"], [16, 3, 1, "", "test_debin_states"], [16, 3, 1, "", "test_get_state_to_action"], [16, 3, 1, "", "test_join_state_action"], [16, 3, 1, "", "test_reset"]], "tests.test_environments.test_strategic_pricing_prediction": [[16, 2, 1, "", "TestStrategicPricingPredictionMDP"]], "tests.test_environments.test_strategic_pricing_prediction.TestStrategicPricingPredictionMDP": [[16, 3, 1, "", "setUp"], [16, 3, 1, "", "tearDown"], [16, 3, 1, "", "test_create_average_reward_matrix"], [16, 3, 1, "", "test_get_counts_and_rewards_per_bin"], [16, 3, 1, "", "test_make_rewards_from_data"], [16, 3, 1, "", "test_step"], [16, 3, 1, "", "test_transform_df_to_numpy"]], "tests.test_environments.test_strategic_pricing_suggestion": [[16, 2, 1, "", "TestStrategicPricingSuggestionMDP"]], "tests.test_environments.test_strategic_pricing_suggestion.TestStrategicPricingSuggestionMDP": [[16, 3, 1, "", "setUp"], [16, 3, 1, "", "tearDown"], [16, 3, 1, "", "test_create_average_reward_matrix"], [16, 3, 1, "", "test_find_next_state"], [16, 3, 1, "", "test_get_counts_and_rewards_per_bin"], [16, 3, 1, "", "test_make_rewards_from_data"], [16, 3, 1, "", "test_step"], [16, 3, 1, "", "test_transform_df_to_numpy"]], "tests.test_explainability": [[17, 0, 0, "-", "test_pdp"], [17, 0, 0, "-", "test_shap_values"]], "tests.test_explainability.test_pdp": [[17, 2, 1, "", "TestPDP"]], "tests.test_explainability.test_pdp.TestPDP": [[17, 4, 1, "", "dh"], [17, 4, 1, "", "engine"], [17, 4, 1, "", "pdp"], [17, 3, 1, "", "setUpClass"], [17, 3, 1, "", "test_create_pdp"], [17, 3, 1, "", "test_get_denorm_actions"], [17, 3, 1, "", "test_get_denorm_states"], [17, 3, 1, "", "test_get_digitized_pdp"]], "tests.test_explainability.test_shap_values": [[17, 2, 1, "", "TestShapValues"]], "tests.test_explainability.test_shap_values.TestShapValues": [[17, 4, 1, "", "dh"], [17, 4, 1, "", "engine"], [17, 3, 1, "", "setUpClass"], [17, 4, 1, "", "shap_values"], [17, 3, 1, "", "test_bin_sample"], [17, 3, 1, "", "test_create_shap_values"], [17, 3, 1, "", "test_get_denorm_actions"], [17, 3, 1, "", "test_normalize_sample"], [17, 3, 1, "", "test_predict_action"], [17, 3, 1, "", "test_sample_plus_minus_samples"], [17, 3, 1, "", "test_verify_cell_availability"], [17, 3, 1, "", "test_verify_outliers"], [17, 3, 1, "", "test_verify_sample_length"]], "tests.test_foundation": [[18, 0, 0, "-", "test_engine"], [18, 0, 0, "-", "test_utils"]], "tests.test_foundation.test_engine": [[18, 2, 1, "", "TestEngine"]], "tests.test_foundation.test_engine.TestEngine": [[18, 4, 1, "", "dh"], [18, 3, 1, "", "setUp"], [18, 3, 1, "", "setUpClass"], [18, 3, 1, "", "tearDown"], [18, 3, 1, "", "test_create_agent"], [18, 3, 1, "", "test_create_env"], [18, 3, 1, "", "test_create_world_agents"], [18, 3, 1, "", "test_get_bins"], [18, 3, 1, "", "test_train_agent"]], "tests.test_foundation.test_utils": [[18, 2, 1, "", "TestUtils"]], "tests.test_foundation.test_utils.TestUtils": [[18, 3, 1, "", "test_convert_to_list"], [18, 3, 1, "", "test_convert_to_string"], [18, 3, 1, "", "test_decay_param"], [18, 3, 1, "", "test_load_dataset"], [18, 3, 1, "", "test_split_train_test"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "explain": [0, 4, 10], "rl": [0, 4], "s": 0, "document": 0, "content": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "indic": 0, "tabl": 0, "main": 2, "modul": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "src": [6, 7, 8, 9, 10, 11, 12], "packag": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "subpackag": [6, 13], "agent": [7, 11], "submodul": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "double_q_learn": 7, "q_learner": 7, "sarsa": 7, "sarsa_lambda": 7, "td": 7, "data_handl": 8, "environ": [9, 11], "strategic_pricing_predict": 9, "strategic_pricing_suggest": 9, "pdp": 10, "foundat": 11, "engin": 11, "util": 11, "perform": 12, "performance_evalu": 12, "test": [13, 14, 15, 16, 17, 18], "test_ag": 14, "test_double_q_learn": 14, "test_q_learn": 14, "test_sarsa": 14, "test_sarsa_lambda": 14, "test_td": 14, "test_data_handl": 15, "test_environ": 16, "test_strategic_pricing_predict": 16, "test_strategic_pricing_suggest": 16, "test_explain": 17, "test_pdp": 17, "test_shap_valu": 17, "test_found": 18, "test_engin": 18, "test_util": 18, "main_evalu": 3, "todo": [], "librari": 1, "paramet": 5, "strategic_pr": 9, "new_env": [], "shap_valu": 10, "test_hyperparam": 13, "test_strategic_pr": 16}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})